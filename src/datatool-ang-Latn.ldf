%\subsection{Root Old English (Anglo Saxon) Latin Script LDF for
%\sty{datatool-base} (\file{datatool-ang-Latn.ldf})}
% Provide support for Old English (\sty{tracklang} root language
% \qt{anglosaxon}) using Latin script.
% This is mainly provided as an example for dealing with languages
% that have multiple scripts and non-ASCII letters.
% As such, it doesn't provide any translations (except for \qt{and}) or date/time
% formatting.
%    \begin{macrocode}
\TrackLangProvidesResource{ang-Latn}%%FILEVERSION%%
%    \end{macrocode}
% Try loading \filemeta{datatool-ang-Latn-}{encoding}{.ldf}
%    \begin{macrocode}
\TrackLangRequestResource{ang-Latn-\TrackLangEncodingName}
{%
%    \end{macrocode}
% Not found.
%    \begin{macrocode}
  \PackageWarning{datatool-ang-Latn}%
   {%
     No support for `anglosaxon' with script `Latn'
     and encoding `\TrackLangEncodingName'.%
   }%
  \endinput
}
%    \end{macrocode}
% Switch on \LaTeX3 syntax.
%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}
% Any options may be defined with
%\begin{dispListing}
%\datatool_locale_define_keys:nn { ang-Latn } { ... }
%\end{dispListing}
% or
%\begin{dispListing}
%\datatool_locale_define_keys:nn { ang-Latn / subgroup } { ... }
%\end{dispListing}
% (Syntax as per \verb|\keys_define:nn| )
%
%\subsubsection{Orthography rules}
%NB \cs{DTLangLatnLocaleHandler} is defined in the applicable encoding
%file loaded above.
%
%\begin{macro}{\DTLangLatnLocaleGetInitialLetter}
%Get the first letter of the word according to the locale's alphabet and 
%store in token list variable.
%    \begin{macrocode}
\newcommand \DTLangLatnLocaleGetInitialLetter [ 2 ]
 {
   \datatool_get_first_letter:nN { #1 } #2 
 }
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\DTLangLatnLocaleGetGroupString}
%\begin{definition}
%\cs{DTLangLatnLocaleGetGroupString}\marg{actual}\marg{sort value}\marg{tl}
%\end{definition}
%    \begin{macrocode}
\newcommand \DTLangLatnLocaleGetGroupString [ 3 ]
 {
   \tl_set:Nn #3 { #1 }
   \datatool_angLatn_process_letter_group:N #3
   \bool_lazy_and:nnT
     { \tl_if_head_eq_charcode_p:nN { #1 } - }
     { \bool_not_p:n { \tl_if_head_eq_charcode_p:nN { #2 } " } }
    {
      \exp_args:NNe \tl_set:Nn #3 { \tl_tail:N #3 }
    }
 }
%    \end{macrocode}
%\end{macro}
%
%    \begin{macrocode}
\newcommand \DataToolBaseAngloSaxonLatin
 {
  \DTLresetLanguage
  \renewcommand
    \DTLCurrentLocaleWordHandler
    { \DTLangLatnLocaleHandler }
  \renewcommand
    \DTLCurrentLocaleGetInitialLetter
    { \DTLangLatnLocaleGetInitialLetter }
  \renewcommand
    \DTLCurrentLocaleGetGroupString
    { \DTLangLatnLocaleGetGroupString }
  \DTLangLatnTranslations
%    \end{macrocode}
% Allow region files to construct control sequence names based on
% this naming scheme:
%    \begin{macrocode}
  \tl_set:Nn \l_datatool_current_language_tl { angLatn }
 }
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{macrocode}
\TrackLangAddToCaptions{\DataToolBaseAngloSaxonLatin}
%    \end{macrocode}
